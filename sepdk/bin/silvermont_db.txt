CODE	UMASK	NAME	DESCRIPTION	COUNTER	OVERFLOW	MSR_INDEX	MSR_VALUE	PRECISE_EVENT	SAV_LOWER_LIMIT	OTHER	DEFAULT	EM_TRIGGER	MATRIX_EVENT	VISIBILITY
0xC4	0x00	BR_INST_RETIRED.ALL_BRANCHES	Counts the number of branch instructions retired...	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0xC4	0x7E	BR_INST_RETIRED.JCC	Counts the number of JCC branch instructions retired	"0,1"	2000003	0	0	0	0	0x53	0	0	0	Public
0xC4	0xFE	BR_INST_RETIRED.TAKEN_JCC	Counts the number of taken JCC branch instructions retired	"0,1"	2000003	0	0	0	0	0x53	0	0	0	Public
0xC4	0xF9	BR_INST_RETIRED.CALL	Counts the number of near CALL branch instructions retired	"0,1"	2000003	0	0	0	0	0x53	0	0	0	Public
0xC4	0xFD	BR_INST_RETIRED.REL_CALL	Counts the number of near relative CALL branch instructions retired	"0,1"	2000003	0	0	0	0	0x53	0	0	0	Public
0xC4	0xFB	BR_INST_RETIRED.IND_CALL	Counts the number of near indirect CALL branch instructions retired	"0,1"	2000003	0	0	0	0	0x53	0	0	0	Public
0xC4	0xF7	BR_INST_RETIRED.RETURN	Counts the number of near RET branch instructions retired	"0,1"	2000003	0	0	0	0	0x53	0	0	0	Public
0xC4	0xEB	BR_INST_RETIRED.NON_RETURN_IND	Counts the number of near indirect JMP and near indirect CALL branch instructions retired	"0,1"	2000003	0	0	0	0	0x53	0	0	0	Public
0xC4	0xBF	BR_INST_RETIRED.FAR_BRANCH	Counts the number of far branch instructions retired	"0,1"	2000003	0	0	0	0	0x53	0	0	0	Public
0xC4	0x00	BR_INST_RETIRED.ALL_BRANCHES_PS	Counts the number of branch instructions retired (Precise Event)	"0,1"	2000003	0	0	1	0	0x53	0	0	0	Public
0xC4	0x7E	BR_INST_RETIRED.JCC_PS	Counts the number of JCC branch instructions retired (Precise Event)	"0,1"	2000003	0	0	1	0	0x53	0	0	0	Public
0xC4	0xFE	BR_INST_RETIRED.TAKEN_JCC_PS	Counts the number of taken JCC branch instructions retired (Precise Event)	"0,1"	2000003	0	0	1	0	0x53	0	0	0	Public
0xC4	0xF9	BR_INST_RETIRED.CALL_PS	Counts the number of near CALL branch instructions retired (Precise Event)	"0,1"	2000003	0	0	1	0	0x53	0	0	0	Public
0xC4	0xFD	BR_INST_RETIRED.REL_CALL_PS	Counts the number of near relative CALL branch instructions retired (Precise Event)	"0,1"	2000003	0	0	1	0	0x53	0	0	0	Public
0xC4	0xFB	BR_INST_RETIRED.IND_CALL_PS	Counts the number of near indirect CALL branch instructions retired (Precise Event)	"0,1"	2000003	0	0	1	0	0x53	0	0	0	Public
0xC4	0xF7	BR_INST_RETIRED.RETURN_PS	Counts the number of near RET branch instructions retired (Precise Event)	"0,1"	2000003	0	0	1	0	0x53	0	0	0	Public
0xC4	0xEB	BR_INST_RETIRED.NON_RETURN_IND_PS	Counts the number of near indirect JMP and near indirect CALL branch instructions retired (Precise Event)	"0,1"	2000003	0	0	1	0	0x53	0	0	0	Public
0xC4	0xBF	BR_INST_RETIRED.FAR_BRANCH_PS	Counts the number of far branch instructions retired (Precise Event)	"0,1"	200003	0	0	1	0	0x53	0	0	0	Public
0xC5	0x00	BR_INST_MISP_RETIRED.ALL_BRANCHES	Counts the number of mispredicted branch instructions retired	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0xC5	0x7E	BR_INST_MISP_RETIRED.JCC	Counts the number of mispredicted JCC branch instructions retired	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0xC5	0xFE	BR_INST_MISP_RETIRED.TAKEN_JCC	Counts the number of mispredicted taken JCC branch instructions retired	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0xC5	0xFB	BR_INST_MISP_RETIRED.IND_CALL	Counts the number of mispredicted near indirect CALL branch instructions retired	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0xC5	0xF7	BR_INST_MISP_RETIRED.RETURN	Counts the number of mispredicted near RET branch instructions retired	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0xC5	0xEB	BR_INST_MISP_RETIRED.NON_RETURN_IND	Counts the number of mispredicted near indirect JMP and near indirect CALL branch instructions retired	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0xC5	0x00	BR_INST_MISP_RETIRED.ALL_BRANCHES_PS	Counts the number of mispredicted branch instructions retired (Precise Event)	"0,1"	200003	0	0	1	0	0x53	0	0	0	Public
0xC5	0x7E	BR_INST_MISP_RETIRED.JCC_PS	Counts the number of mispredicted JCC branch instructions retired (Precise Event)	"0,1"	200003	0	0	1	0	0x53	0	0	0	Public
0xC5	0xFE	BR_INST_MISP_RETIRED.TAKEN_JCC_PS	Counts the number of mispredicted taken JCC branch instructions retired (Precise Event)	"0,1"	200003	0	0	1	0	0x53	0	0	0	Public
0xC5	0xFB	BR_INST_MISP_RETIRED.IND_CALL_PS	Counts the number of mispredicted near indirect CALL branch instructions retired (Precise Event)	"0,1"	200003	0	0	1	0	0x53	0	0	0	Public
0xC5	0xF7	BR_INST_MISP_RETIRED.RETURN_PS	Counts the number of mispredicted near RET branch instructions retired (Precise Event)	"0,1"	200003	0	0	1	0	0x53	0	0	0	Public
0xC5	0xEB	BR_INST_MISP_RETIRED.NON_RETURN_IND_PS	Counts the number of mispredicted near indirect JMP and near indirect CALL branch instructions retired (Precise Event)	"0,1"	200003	0	0	1	0	0x53	0	0	0	Public
0xC2	0x01	UOPS_RETIRED.MS	"Counts the number of uops that are from the complex flows issued by the micro-sequencer (MS).  This includes uops from flows due to faults, assists, and inserted flows."	"0,1"	2000003	0	0	0	0	0x53	0	0	0	Public
0xC2	0x10	UOPS_RETIRED.ALL	Counts the number of micro-ops retired	"0,1"	2000003	0	0	0	0	0x53	0	0	0	Public
0xC3	0x01	MACHINE_CLEARS.SMC	Counts the number of times that the machine clears due to program modifying data within 1K of a recently fetched code page	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0xC3	0x02	MACHINE_CLEARS.MEMORY_ORDERING	Counts the number of times the machine clears due to memory ordering nukes	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0xC3	0x04	MACHINE_CLEARS.FP_ASSIST	Counts the number of floating operations retired that required microcode assists	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0xC3	0x08	MACHINE_CLEARS.ALL	Counts all machine clears	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0xCA	0x01	NO_ALLOC_CYCLES.ROB_FULL	Counts the number of cycles when no uops are allocated and the ROB is full (less than 2 entries available)	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0xCA	0x20	NO_ALLOC_CYCLES.RAT_STALL	Counts the number of cycles when no uops are allocated and a RATstall is asserted.  	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0xCB	0x01	RS_FULL_STALL.MEC	"Counts the number of cycles and allocation pipeline is stalled and is waiting for a free MEC reservation station entry.  The cycles should be appropriately counted in case of the cracked ops e.g. In case of a cracked load-op, the load portion is sent to M"	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0xCB	0x1F	RS_FULL_STALL.ALL	"Counts the number of cycles the Alloc pipeline is stalled when any one of the RSs (IEC, FPC and MEC) is full. This event is a superset of all the individual RS stall event counts."	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0xC0	0x00	INST_RETIRED.ANY_P	Counts the number of instructions retired	"0,1"	200003	0	0	0	5	0x53	0	0	0	Public
0xCC	0x10	RS_DISPATCH_STALL.MEC_RS	Counts cycles when no uops were dispatched from the MEC RS or rehab queue while valid ops were left to dispatch	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0xCD	0x01	CYCLES_DIV_BUSY.ALL	Cycles the divider is busy.  Does not imply a stall waiting for the divider.  	"0,1"	2000003	0	0	0	0	0x53	0	0	0	Public
0x00	0x01	INST_RETIRED.ANY	Fixed Counter: Counts the number of instructions retired	32	200003	0	0	0	5	0x53	1	1	0	Public
0x00	0x02	CPU_CLK_UNHALTED.CORE	Fixed Counter: Counts the number of unhalted core clock cycles	33	2000003	0	0	0	5	0x53	1	2	0	Public
0x00	0x03	CPU_CLK_UNHALTED.REF_TSC	Fixed Counter: Counts the number of unhalted reference clock cycles	34	2000003	0	0	0	5	0x53	0	1	0	Public
0x3C	0x00	CPU_CLK_UNHALTED.CORE_P	Counts the number of unhalted core clock cycles	"0,1"	2000003	0	0	0	5	0x53	0	0	0	Public
0x3C	0x01	CPU_CLK_THREAD_UNHALTED.REF	Counts the number of unhalted reference clock cycles	"0,1"	2000003	0	0	0	5	0x53	0	0	0	Public
0x30	0x00	L2_REJECT_XQ.ALL	Counts the number of request from the L2 that were not accepted into the XQ. There is no concept of at-ret here. It might include requests due to instructions in the speculative path or prefetch requests.	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0x31	0x00	CORE_REJECT_L2Q.ALL	Counts the number of request that were not accepted into the L2Q because of any L2  queue reject condition. There is no concept of at-ret here. It might include requests due to instructions in the speculative path.	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0x2E	0x4F	LONGEST_LAT_CACHE.REFERENCE	Counts the total number of L2 cache references	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0x2E	0x41	LONGEST_LAT_CACHE.MISS	Counts the number of L2 cache misses	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0x80	0x03	ICACHE.ACCESSES	"This event counts all instruction fetches, including uncacheable fetches that bypass the Instruction Fetch Unit (IFU). "	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0x80	0x01	ICACHE.HIT	Icache hit	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0x80	0x02	ICACHE.MISSES	Icache miss	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0x86	0x02	NIP_STALL.ITLB_MISS	Counts the number of cycles the NIP stalls and there is an outstanding ITLB miss. This is a cummulative count of cycles the NIP stalled for all ITLB misses. 	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0x86	0x04	NIP_STALL.ICACHE_MISS	Counts the number of cycles the NIP stalls because of an icache miss. This is a cummulative count of cycles the NIP stalled for all icache misses. 	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0xE7	0x01	MS_DECODED.MS_ENTRY	Counts the number of times entered into a ucode flow in the FEC.  Includes inserted flows due to front-end detected faults or assists.  Speculative count.	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0x03	0x01	REHABQ.LD_BLOCK_ST_FORWARD	Counts the number of occurences a retired load gets blocked because its address partially overlaps with a store 	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0x03	0x02	REHABQ.LD_BLOCK_STD_NOTREADY	Counts the number of occurences a retired load gets blocked because its address overlaps with a store whose data is not ready	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0x03	0x04	REHABQ.ST_SPLITS	Counts the number of occurences a retired store that was pushed into the rehab queue because it sees a cache line split. Each split should be counted only once.	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0x03	0x08	REHABQ.LD_SPLITS	Counts the number of occurences a retired load was pushed into the rehab queue because it sees a cache line split. Each split should be counted only once.	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0x03	0x10	REHABQ.LOCK	Counts all the retired locked loads. It does not include stores because we would double count if we count stores	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0x03	0x20	REHABQ.STA_FULL	Counts the store ops retired that were pushed in the rehad queue because the store address buffer is full	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0x03	0x01	REHABQ.LD_BLOCK_ST_FORWARD_PS	Counts the number of occurences a retired load gets blocked because its address partially overlaps with a store (Precise Event)	"0,1"	200003	0	0	1	0	0x53	0	0	0	Public
0x03	0x08	REHABQ.LD_SPLITS_PS	Counts the number of occurences a retired load was pushed into the rehab queue because it sees a cache line split. Each split should be counted only once. (Precise Event)	"0,1"	200003	0	0	1	0	0x53	0	0	0	Public
0x04	0x01	MEM_UOPS_RETIRED.L1_MISS_LOADS	"Counts the number of load ops retired that miss in L1 D cache, prefetch misses will not be counted"	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0x04	0x02	MEM_UOPS_RETIRED.L2_HIT_LOADS	Counts the number of load ops retired that hit in the L2	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0x04	0x04	MEM_UOPS_RETIRED.L2_MISS_LOADS	Counts the number of load ops retired that miss in the L2	"0,1"	100007	0	0	0	0	0x53	0	0	0	Public
0x04	0x08	MEM_UOPS_RETIRED.DTLB_MISS_LOADS	Counts the number of load ops retired that cause a DTLB miss	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0x04	0x10	MEM_UOPS_RETIRED.UTLB_MISS	Counts the number of micro TLB misses for load and store ops retired	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0x04	0x20	MEM_UOPS_RETIRED.HITM	Counts the loads retired that get the data from the other core or from the other module	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0x04	0x40	MEM_UOPS_RETIRED.ALL_LOADS	Counts all the load ops retired	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0x04	0x80	MEM_UOPS_RETIRED.ALL_STORES	Counts all the store ops retired	"0,1"	200003	0	0	0	0	0x53	0	0	0	Public
0x04	0x02	MEM_UOPS_RETIRED.L2_HIT_LOADS_PS	Counts the number of load ops retired that hit in the L2 (Precise Event)	"0,1"	200003	0	0	1	0	0x53	0	0	0	Public
0x04	0x04	MEM_UOPS_RETIRED.L2_MISS_LOADS_PS	Counts the number of load ops retired that miss in the L2 (Precise Event)	"0,1"	100007	0	0	1	0	0x53	0	0	0	Public
0x04	0x08	MEM_UOPS_RETIRED.DTLB_MISS_LOADS_PS	Counts the number of load ops retired that cause a DTLB miss (Precise Event)	"0,1"	200003	0	0	1	0	0x53	0	0	0	Public
0x04	0x20	MEM_UOPS_RETIRED.HITM_PS	Counts the loads retired that get the data from the other core or from the other module (Precise Event)	"0,1"	200003	0	0	1	0	0x53	0	0	0	Public
0x05	0x01	PAGE_WALKS.D_SIDE_WALKS	Counts the total D-side page walks that are completed or started. The page walks started in the speculative path will also be counted	"0,1"	2000003	0	0	0	0	0x57	0	0	0	Public
0x05	0x01	PAGE_WALKS.D_SIDE_CYCLES	Counts the total cycles for all the D-side page walks. The cycles for page walks started in speculative path will also be included.	"0,1"	2000003	0	0	0	0	0x53	0	0	0	Public
0x05	0x02	PAGE_WALKS.I_SIDE_WALKS	Counts the total I-side page walks that are completed.	"0,1"	2000003	0	0	0	0	0x57	0	0	0	Public
0x05	0x02	PAGE_WALKS.I_SIDE_CYCLES	Counts the total cycles for all the I-side page walks. The cycles for page walks started in speculative path will also be included.	"0,1"	2000003	0	0	0	0	0x53	0	0	0	Public
0x05	0x03	PAGE_WALKS.WALKS	Counts the total page walks that are completed (I-side and D-side)	"0,1"	2000003	0	0	0	0	0x57	0	0	0	Public
0x05	0x03	PAGE_WALKS.CYCLES	"Counts the total cycles for all the page walks. Page walks started in the speculative path are not stopped if jeclear is detected, this count will include cycles for all the page walks that are completed"	"0,1"	2000003	0	0	0	0	0x53	0	0	0	Public
0xB7	"0x01,0x02"	OFFCORE_RESPONSE	tbd	"0,1"	2000003	0	0	0	0	0x53	0	0	1	Public
